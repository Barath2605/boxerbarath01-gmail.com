class Node {
  int key;
  Node left, right;
  Node() {
    key = 0;
    left = null;
    right = null;
  }
  Node(int t){
    key = t;
    left = null;
    right = null;
  }
}
public class BinarySearchTree {
  public Node root;
  public static void main(String args[]) {
    BinarySearchTree bst = new BinarySearchTree();
    bst.add(50);
    bst.add(30);
    bst.add(40);
    bst.add(20);
    bst.add(70);
    bst.add(60);
    bst.add(80);    
  }
  public Node leftMove(Node t) {
    return t.left;
  }  
  public Node rightMove(Node t) {
    return t.right;
  
  }  
  public void add(int t){
    Node root1=root;
    
    Node tree = new Node(t);
    if(root == null){
      root = tree;
    }
    else{
      
      while(root1!=null){
        Node root2=root1;
        if(root1.key>t){
          root1 = leftMove(root1);
          if(root1==null){
            root2.left=tree; 
          }          
        }
        else{
          root1 = rightMove(root1);
          if(root1==null){
            root2.right=tree;
            
          }
        }
        
      }
      
      
  }
  }
  
}
